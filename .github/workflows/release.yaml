name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rust: stable
            targets: 
              - x86_64-unknown-linux-gnu
              - x86_64-unknown-linux-musl
              - i686-unknown-linux-musl
              - aarch64-unknown-linux-musl
              - arm-unknown-linux-musleabihf
          - os: macos-latest
            targets:
              - x86_64-apple-darwin
              - aarch64-apple-darwin
          - os: windows-latest
            targets:
              - x86_64-pc-windows-msvc
              - i686-pc-windows-msvc
              - aarch64-pc-windows-msvc

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Add targets
      if: ${{ matrix.os != 'windows-latest' }}
      run: |
        for target in ${{ join(matrix.targets, ' ') }}; do
          rustup target add $target
        done

    - name: Build
      if: ${{ matrix.os != 'windows-latest' }}
      run: |
        for target in ${{ join(matrix.targets, ' ') }}; do
          cargo build --release --target $target
          mv target/$target/release/tc target/$target/release/tc-$target
        done

    - name: Add targets windows
      if: ${{ matrix.os == 'windows-latest' }}
      shell: pwsh
      run: |
        $targets = @("${{ join(matrix.targets, '", "') }}")
        foreach ($target in $targets) {
          rustup target add $target
        }

    - name: Build windows
      if: ${{ matrix.os == 'windows-latest' }}
      shell: pwsh
      run: |
        $targets = @("${{ join(matrix.targets, '", "') }}")
        foreach ($target in $targets) {
          cargo build --release --target $target
          Move-Item -Path "target/$target/release/tc.exe" -Destination "target/$target/release/tc-$target.exe" -Force
        }

    - name: Upload artifacts
      uses: AButler/upload-release-assets@v3.0
      with:
        files: target/*/release/tc-*
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ github.ref_name }}
